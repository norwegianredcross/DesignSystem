import{B as a}from"./button-Bd7lj-RC.js";const e=a;e.displayName="Button";try{e.displayName="Button",e.__docgenInfo={description:"",displayName:"Button",props:{"data-size":{defaultValue:null,description:"Changes size for descendant Designsystemet components. Select from predefined sizes.",name:"data-size",required:!1,type:{name:"Size"}},variant:{defaultValue:{value:"'primary'"},description:"Specify which variant to use",name:"variant",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"secondary"'},{value:'"tertiary"'}]}},"data-color":{defaultValue:null,description:"Change the color scheme of the button",name:"data-color",required:!1,type:{name:"any"}},icon:{defaultValue:{value:"false"},description:"Toggle icon only styling, pass icon as children",name:"icon",required:!1,type:{name:"boolean"}},loading:{defaultValue:{value:"false"},description:`Toggle loading state.
Pass an element if you want to display a custom loader.`,name:"loading",required:!1,type:{name:"ReactNode"}},asChild:{defaultValue:{value:"false"},description:"Change the default rendered element for the one passed as a child, merging their props and behavior.",name:"asChild",required:!1,type:{name:"boolean"}},type:{defaultValue:{value:"'button'"},description:"Specify the type of button. Unset when `asChild` is true",name:"type",required:!1,type:{name:"enum",value:[{value:'"button"'},{value:'"submit"'},{value:'"reset"'}]}}}}}catch{}export{e as B};
