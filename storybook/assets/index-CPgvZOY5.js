import{r as t,j as p}from"./iframe-BgQDqsRD.js";import{a as C,c as S,o as I,f as M,s as j}from"./floating-ui.dom-D8S3B1vO.js";import{S as q}from"./index-CZKmP7yi.js";import{c as F}from"./lite-DaUVFjkg.js";import{u as V}from"./floating-ui.react-CwLPqv5Y.js";const $=t.forwardRef(function({id:s,children:o,content:c,placement:r="top",open:a,className:b,...E},T){const m=t.useId(),[R,u]=t.useState(!1),g=t.useRef(null),h=t.useRef(null),k=V([h,T]),l=a??R,y=()=>{u(!0)},v=()=>{u(!1)};t.useEffect(()=>{var w;const e=h.current,i=g.current;if((w=e==null?void 0:e.togglePopover)==null||w.call(e,l),e&&(e.style.opacity=l?"1":"0"),e&&i&&l)return C(i,e,()=>{S(i,e,{placement:r,strategy:"fixed",middleware:[I(f=>{const d=getComputedStyle(f.elements.floating,"::before");return parseFloat(d.height)}),M({fallbackAxisSideDirection:"start"}),j(),z]}).then(({x:f,y:d})=>{e.style.translate=`${f}px ${d}px`})})},[l,r]),t.useEffect(()=>{const e=i=>{i.key==="Escape"&&u(!1)};return window.addEventListener("keydown",e),()=>{window.removeEventListener("keydown",e)}},[]);const P=typeof o=="string"?"span":q;if(typeof o!="string"&&o.type===t.Fragment)return console.error("<Tooltip> children needs to be a single ReactElement that can receive a ref and not: <Fragment/> | <></>"),null;const _={[t.version.startsWith("19")?"popoverTarget":"popovertarget"]:s??m,[t.version.startsWith("19")?"popoverTargetAction":"popovertargetaction"]:"show"};return p.jsxs(p.Fragment,{children:[p.jsx(P,{ref:g,..._,onMouseEnter:y,onMouseLeave:v,onFocus:y,onBlur:v,children:o}),p.jsx("div",{ref:k,role:"tooltip",className:F("ds-tooltip",b),id:s??m,popover:"manual",...E,children:c})]})}),z={name:"ArrowPseudoElement",fn(n){const{elements:s,rects:o,placement:c}=n;let r=`${Math.round(o.reference.width/2+o.reference.x-n.x)}px`,a=`${Math.round(o.reference.height/2+o.reference.y-n.y)}px`;switch(c){case"top":a="100%";break;case"right":r="0";break;case"bottom":a="0";break;case"left":r="100%";break}return s.floating.style.setProperty("--dsc-tooltip-arrow-x",r),s.floating.style.setProperty("--dsc-tooltip-arrow-y",a),n}},x=$;try{x.displayName="Tooltip",x.__docgenInfo={description:"",displayName:"Tooltip",props:{"data-size":{defaultValue:null,description:"Changes size for descendant Designsystemet components. Select from predefined sizes.",name:"data-size",required:!1,type:{name:"enum",value:[{value:'"sm"'},{value:'"md"'},{value:'"lg"'}]}},children:{defaultValue:null,description:`The element or string that triggers the tooltip.
@note If it is a string, it will be wrapped in a span.
@note If it is an element, it needs to be able to receive a ref.`,name:"children",required:!0,type:{name:"string | (ReactElement<unknown, string | JSXElementConstructor<any>> & RefAttributes<HTMLElement>)"}},content:{defaultValue:null,description:"Content of the tooltip",name:"content",required:!0,type:{name:"string"}},placement:{defaultValue:{value:"'top'"},description:"Placement of the tooltip on the trigger.",name:"placement",required:!1,type:{name:"enum",value:[{value:'"top"'},{value:'"right"'},{value:'"bottom"'},{value:'"left"'}]}},open:{defaultValue:null,description:`Whether the tooltip is open or not.
This overrides the internal state of the tooltip.`,name:"open",required:!1,type:{name:"boolean"}}}}}catch{}export{x as T};
